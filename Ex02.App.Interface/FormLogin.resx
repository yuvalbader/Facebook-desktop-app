<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="button1.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxFacebookLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAHJQTFRF////
        O1mYKU2SNFSVys/fOVeXJkuR+vv92d7qLVCTe422R2OfMlOVUGmhrrjRsrrRucLXHUaPk6LDbYCumafG
        z9Ti9fb5wcncYHap3+Pu6+30TmihfY+3jp3AprHNhpS5ZHmpcoSwboGt3eHsF0ONADaIcX77aQAAA2lJ
        REFUeF7t3W93mjAUx3EhTWwU/6CFKrZqu+79v8Uh3h1d5Uq27EHu9fd5tHMInH4PTioJdgQAAAAAAAAA
        AAAAAAAAAAAAAAAAAADw/zVNQ/9Spd6+7t/Xs+yrLJ1zZVkW0+Nhv3ymzcJtF4eNd7kvjM0urCm8241p
        jGDNfOPzwl63XdgNjZKrWnvP1J2YI42Tart2BZ/XEl5Yr7yhEo5Z01iRmp2/e/5OzAcNlqgqB/uyrJjQ
        aIHmjiLuMm80XJ5FHnAG23N4oPHiVC4oUG5hPfwec1a80x7SfBRUMKRY0R7CPOUUMMi/0C6yjHeBr9G2
        cE/7yLIMPoVSC6fBpzDzC9pHlCroWn8ms3Ay9Ov2lfyVdpKkDr1SnIgsDL9UtFxFe0lyuH8ObWaviCzc
        3HkntT430+nsYirwXltzJ9DNXqqmqcdXaC9JKva/obES31ZuzT0FfWdmNQ0R7p15o7GZllv53PXez2mA
        eEem0Cq4fX82638vFX3b8A9jplDoR90eY+ajk9APgj1QKB9bqOZiwRaK/DDfB4XyoVA+FMrHFi5pgHhc
        YY5CMVAon/5CbvJQ5BTMaPsxuZX1F9rNW7tx1Zl3njpp30OtnLnBLkW03daO7+QtV27pWGnib+CHS/0c
        0o/5z+yODpWo+MLUl5e+Rr9KU1/0FV+Y+ieOBTeRFix/okMlKr7QpX2x4CdDg5V0pFTtYwvtlI6UqujC
        5J9FeIktTH79bHRh8pMZ3KKEYKlfLOILXerLMwZWsA2yReorbKILZ6mvz3j7i6WyfcwnHShZk8hzmP7j
        JLGF6c/tryNfpclfLEafsYWJf7IYjTbudL+sc759dkI//Q1DI6/45FcrVudbnq3l+RZoi/tt3Bwuo3+r
        RC7ma5i7U3pWDOkvrEtK+kbPLDcK5XuAQuYZ5wcoVDMHzBXqmeXWXzhm5oAVFVLRdyiUgy3U8WRe6wEK
        Va0Y6oNC+djC5O+rheKezkOhHI9b6NQUcl8akSv5KtYWCuXTX8h844CiQmZS0f2g7fJxhcnPFQZDoXzM
        8gVNhfrPIVOo548F6C9kFruhUJCHLSyVfFlbS38hszQahYJwhWq+kI4tpM0KMI+ZoFAQ/YWrL9fnJ21W
        oHnuR5sBAAAAAAAAAAAAAAAAAAAAAAAAAAAAgo1GvwDUfTOXSpdeowAAAABJRU5ErkJggg==
</value>
  </data>
</root>